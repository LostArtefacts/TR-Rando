<Window x:Class="TRRandomizerView.Windows.AdvancedWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cvt="clr-namespace:TRRandomizerView.Converters"
        xmlns:ctrl="clr-namespace:TRRandomizerView.Controls"
        xmlns:helpers="clr-namespace:TRRandomizerCore.Helpers;assembly=TRRandomizerCore"
        mc:Ignorable="d"
        Icon="..\Resources\rando.ico"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        ShowInTaskbar="False"
        SizeToContent="WidthAndHeight"
        Loaded="Window_Loaded"
        IsVisibleChanged="Window_IsVisibleChanged"
        Closing="Window_Closing"
        Title="Advanced">
    <Window.Resources>
        <cvt:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter" />
    </Window.Resources>

    <Grid x:Name="_content"
          Grid.IsSharedSizeScope="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Grid Margin="10">
            <Grid.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Margin"
                            Value="0,10,0,0" />
                </Style>
                <Style x:Key="HeaderStyle"
                       TargetType="{x:Type TextBlock}">
                    <Setter Property="FontSize"
                            Value="14" />
                    <Setter Property="TextDecorations"
                            Value="Underline" />
                </Style>
                <Style x:Key="OptionDescriptionStyle"
                       TargetType="{x:Type Label}">
                    <Setter Property="HorizontalAlignment"
                            Value="Left" />
                    <Setter Property="FontStyle"
                            Value="Italic" />
                    <Setter Property="Padding"
                            Value="0" />
                    <Setter Property="Margin"
                            Value="40,0,0,0" />
                </Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Margin"
                            Value="0, 5, 0, 10" />
                    <Setter Property="Grid.ColumnSpan"
                            Value="2" />
                </Style>
            </Grid.Resources>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock 
                Text="{Binding MainDescription}"
                TextWrapping="Wrap"
                Grid.ColumnSpan="2"
                Margin="0,0,0,10"/>

            <!-- General -->
            <StackPanel Grid.Row="1"
                        Visibility="{Binding HasBoolItems, Converter={StaticResource BoolToCollapsedConverter}}">
                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="General"/>
                <ItemsControl ItemsSource="{Binding BoolItemsSource, Mode=TwoWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,5,0,0"
                                  Visibility="{Binding IsAvailable, Converter={StaticResource BoolToCollapsedConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Border Margin="0,10,0,0">
                                    <CheckBox IsEnabled="{Binding IsActive}"
                                              IsChecked="{Binding Value, Mode=TwoWay}"
                                              VerticalAlignment="Center">
                                        <Label Padding="0"
                                               Content="{Binding Title}" />
                                    </CheckBox>
                                </Border>

                                <Border Grid.Column="1"
                                        Margin="0,10,0,0">
                                    <Label Style="{StaticResource OptionDescriptionStyle}"
                                           Content="{Binding Description}">
                                        <Label.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextWrapping" Value="Wrap" />
                                            </Style>
                                        </Label.Resources>
                                    </Label>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>

            <!-- (Item) Difficulty -->
            <StackPanel Grid.Row="2"
                        Visibility="{Binding HasItemDifficulty, Converter={StaticResource BoolToCollapsedConverter}}">
                <StackPanel.Resources>
                    <cvt:ComparisonConverter x:Key="ComparisonConverter" />
                </StackPanel.Resources>

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Difficulty" />

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <Border>
                        <RadioButton Content="Default"
                                     GroupName="randoItemDifficulty"
                                     x:Name="_defaultItemDifficultyButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.RandoItemDifficulty, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:ItemDifficulty.Default}, Mode=TwoWay}" />
                    </Border>

                    <Border Grid.Row="0"
                            Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Standard item randomization." />
                    </Border>

                    <Border Grid.Row="1"
                            Grid.Column="0">
                        <RadioButton Content="One Limit"
                                     GroupName="randoItemDifficulty"
                                     x:Name="_itemOneLimitButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.RandoItemDifficulty, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:ItemDifficulty.OneLimit}, Mode=TwoWay}" />
                    </Border>

                    <Border Grid.Row="1"
                            Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Each item type will spawn a maximum of once per level." />
                    </Border>
                </Grid>
            </StackPanel>

            <!-- (Enemy) Difficulty -->
            <StackPanel Grid.Row="2"
                        Visibility="{Binding HasDifficulty, Converter={StaticResource BoolToCollapsedConverter}}">
                <StackPanel.Resources>
                    <cvt:ComparisonConverter x:Key="ComparisonConverter" />
                </StackPanel.Resources>

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Difficulty"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border>
                        <RadioButton Content="Default"
                                     GroupName="randoEnemyDifficulty"
                                     x:Name="_defaultDifficultyButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.RandoEnemyDifficulty, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:RandoDifficulty.Default}, Mode=TwoWay}"/>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}">
                            <Label.Content>
                                <TextBlock>
                                    Standard restrictions will apply for cross-level enemies. See
                                    <Hyperlink ToolTip="https://github.com/DanzaG/TR2-Rando/blob/master/TRRandomizerCore/Resources/Documentation/ENEMIES.md"
                                               NavigateUri="https://github.com/DanzaG/TR2-Rando/blob/master/TRRandomizerCore/Resources/Documentation/ENEMIES.md"
                                               RequestNavigate="Hyperlink_RequestNavigate">GitHub</Hyperlink>
                                    for details.
                                </TextBlock>
                            </Label.Content>
                        </Label>
                    </Border>

                    <Border Grid.Row="1">
                        <RadioButton Content="No Restrictions"
                                     GroupName="randoEnemyDifficulty"
                                     x:Name="_unrestrictedButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.RandoEnemyDifficulty, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:RandoDifficulty.NoRestrictions}, Mode=TwoWay}" />
                    </Border>

                    <Border Grid.Row="1"
                            Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Disables virtually all cross-level enemy restrictions except for technical ones."/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- Language -->
            <StackPanel Grid.Row="3"
                        Visibility="{Binding HasLanguage, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Language"/>

                <Grid Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border>
                        <ComboBox ItemsSource="{Binding ControllerProxy.AvailableLanguages}"
                                  SelectedItem="{Binding ControllerProxy.GameStringLanguage, Mode=TwoWay}"
                                  DisplayMemberPath="Name"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"/>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Select a language to use for gamestrings, or choose to use a random combination."/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- Mirrored Levels -->
            <StackPanel Grid.Row="4"
                        Visibility="{Binding HasMirroring, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Mirrored Levels"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="0,3,0,0">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Left">
                            <Label Content="Number of levels"
                                   VerticalAlignment="Center"
                                   Padding="0,0,5,0" Margin="0"/>
                            
                            <ctrl:NumericUpDown 
                                HorizontalAlignment="Left"
                                        VerticalAlignment="Center"  
                                        Value="{Binding ControllerProxy.MirroredLevelCount, Mode=TwoWay}"
                                        MinValue="0"
                                        MaxValue="{Binding ControllerProxy.MaximumLevelCount}"/>
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Reverse the geometry and item positioning in the given number of levels, creating a mirror effect."/>
                    </Border>

                    <Border Grid.Row="1">
                        <CheckBox IsChecked="{Binding ControllerProxy.MirrorAssaultCourse, Mode=TwoWay}"
                                  VerticalAlignment="Center">
                            <Label Padding="0"
                                   Content="Include Assault Course" />
                        </CheckBox>
                    </Border>

                    <Border Grid.Column="1"
                            Grid.Row="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Mirror the assault course level in addition to or separately from above."/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- Haircuts -->
            <StackPanel Grid.Row="5"
                        Visibility="{Binding HasHaircuts, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Haircuts"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="0,3,0,0">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Left">
                            <Label Content="Number of levels"
                                   VerticalAlignment="Center"
                                   Padding="0,0,5,0" Margin="0"/>

                            <ctrl:NumericUpDown 
                                HorizontalAlignment="Left"
                                        VerticalAlignment="Center"  
                                        Value="{Binding ControllerProxy.HaircutLevelCount, Mode=TwoWay}"
                                        MinValue="0"
                                        MaxValue="{Binding ControllerProxy.MaximumLevelCount}"/>
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Lara will lose her braid in the given number of levels."/>
                    </Border>

                    <Border Grid.Row="1">
                        <CheckBox IsChecked="{Binding ControllerProxy.AssaultCourseHaircut, Mode=TwoWay}"
                                  VerticalAlignment="Center">
                            <Label Padding="0"
                                   Content="Include Assault Course" />
                        </CheckBox>
                    </Border>

                    <Border Grid.Column="1"
                            Grid.Row="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Give Lara a haircut in the assault course level in addition to or separately from above."/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- Invisibility -->
            <StackPanel Grid.Row="6"
                        Visibility="{Binding HasInvisibility, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Invisibility"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="0,3,0,0">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Left">
                            <Label Content="Number of levels"
                                   VerticalAlignment="Center"
                                   Padding="0,0,5,0" Margin="0"/>

                            <ctrl:NumericUpDown 
                                HorizontalAlignment="Left"
                                        VerticalAlignment="Center"  
                                        Value="{Binding ControllerProxy.InvisibleLevelCount, Mode=TwoWay}"
                                        MinValue="0"
                                        MaxValue="{Binding ControllerProxy.MaximumLevelCount}"/>
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Lara will wear an invisibility cloak in the given number of levels. Only her shadow will be visible."/>
                    </Border>

                    <Border Grid.Row="1">
                        <CheckBox IsChecked="{Binding ControllerProxy.AssaultCourseInvisible, Mode=TwoWay}"
                                  VerticalAlignment="Center">
                            <Label Padding="0"
                                   Content="Include Assault Course" />
                        </CheckBox>
                    </Border>

                    <Border Grid.Column="1"
                            Grid.Row="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Make Lara invisible in the assault course level in addition to or separately from above."/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- Night Mode general -->
            <StackPanel Grid.Row="7"
                        Visibility="{Binding HasNightMode, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="General"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="0,3,0,0">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Left">
                            <Label Content="Number of levels"
                                   VerticalAlignment="Center"
                                   Padding="0,0,5,0" Margin="0"/>

                            <ctrl:NumericUpDown 
                                HorizontalAlignment="Left"
                                        VerticalAlignment="Center"  
                                        Value="{Binding ControllerProxy.NightModeCount, Mode=TwoWay}"
                                        MinValue="0"
                                        MaxValue="{Binding ControllerProxy.MaximumLevelCount}"/>
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="The given number of levels will be converted to night mode."/>
                    </Border>

                    <Border Grid.Row="1">
                        <CheckBox IsChecked="{Binding ControllerProxy.NightModeAssaultCourse, Mode=TwoWay}"
                                  VerticalAlignment="Center">
                            <Label Padding="0"
                                   Content="Include Assault Course" />
                        </CheckBox>
                    </Border>

                    <Border Grid.Column="1"
                            Grid.Row="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Adjust the assault course level lighting in addition to or separately from above."/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- Intensity -->
            <StackPanel Grid.Row="8"
                        Visibility="{Binding HasNightMode, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Intensity"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Content="Dusk"
                                   Padding="0, 0, 5, 0"
                                   VerticalAlignment="Center"/>
                            <Slider Grid.Column="1"
                                    Width="120"
                                    Minimum="0"
                                    Maximum="{Binding ControllerProxy.NightModeDarknessMaximum}"
                                    VerticalAlignment="Center"
                                    ValueChanged="Slider_ValueChanged"
                                    Value="{Binding ControllerProxy.NightModeDarkness, Mode=TwoWay}"/>
                            <Label Grid.Column="2"
                                   Content="Night"
                                   Padding="5, 0, 0, 0"
                                   VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Set the darkness intensity, ranging from dusk to full night mode."/>
                    </Border>

                    <Border Grid.Row="1">
                        <Image Width="186"
                               x:Name="_darknessPreview"
                               HorizontalAlignment="Left"
                               Source="..\Resources\Darkness\0.jpg"/>
                    </Border>
                </Grid>
            </StackPanel>

            <!-- TR3 Globe Options -->
            <StackPanel Grid.Row="9"
                        Visibility="{Binding HasGlobeOptions, Converter={StaticResource BoolToCollapsedConverter}}">
                <StackPanel.Resources>
                    <cvt:ComparisonConverter x:Key="ComparisonConverter" />
                </StackPanel.Resources>

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Globe Display"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border>
                        <RadioButton Content="Default"
                                     GroupName="globeTextDisplay"
                                     x:Name="_globeDefaultButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.GlobeDisplay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:GlobeDisplayOption.Default}, Mode=TwoWay}"/>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Leave the default in place - displayed locations may or may not match the next level."/>
                    </Border>

                    <Border Grid.Row="1">
                        <RadioButton Content="Show next area"
                                     GroupName="globeTextDisplay"
                                     x:Name="_globeAreaButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.GlobeDisplay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:GlobeDisplayOption.Area}, Mode=TwoWay}"/>
                    </Border>

                    <Border Grid.Row="1"
                            Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Show the next area name when selecting a globe location."/>
                    </Border>

                    <Border Grid.Row="2">
                        <RadioButton Content="Show next level"
                                     GroupName="globeTextDisplay"
                                     x:Name="_globeLevelButton"
                                     VerticalAlignment="Center"
                                     Padding="4,0,0,0"
                                     IsChecked="{Binding ControllerProxy.GlobeDisplay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static helpers:GlobeDisplayOption.Level}, Mode=TwoWay}" />
                    </Border>

                    <Border Grid.Row="2"
                            Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}"
                               Content="Show the next level name when selecting a globe location."/>
                    </Border>
                </Grid>
            </StackPanel>
            
            <!-- Level Count -->
            <StackPanel Grid.Row="10"
                        Visibility="{Binding HasGlobeOptions, Converter={StaticResource BoolToCollapsedConverter}}">

                <TextBlock Style="{StaticResource HeaderStyle}"
                           Text="Level Count"/>

                <Grid Margin="0,5,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="SSG1"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Margin="0,3,0,0">
                        <StackPanel Orientation="Horizontal" 
                                    HorizontalAlignment="Left">
                            <Label Content="Number of levels"
                                   VerticalAlignment="Center"
                                   Padding="0,0,5,0" Margin="0"/>

                            <ctrl:NumericUpDown 
                                HorizontalAlignment="Left"
                                        VerticalAlignment="Center"  
                                        Value="{Binding ControllerProxy.PlayableLevelCount, Mode=TwoWay}"
                                        MinValue="1"
                                        MaxValue="{Binding ControllerProxy.TotalLevelCount}"/>
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1">
                        <Label Style="{StaticResource OptionDescriptionStyle}">
                            <TextBlock>
                                <Run
                                    Text="The total number of levels in the game available to play. Default: "
                                 /><Run
                                    Text="{Binding ControllerProxy.TotalLevelCount, Mode=OneWay}"
                                 /><Run Text="."/>
                            </TextBlock>
                        </Label>
                    </Border>
                </Grid>
            </StackPanel>
        </Grid>

        <Border
            BorderThickness="0 1 0 0"
            BorderBrush="#ccc"
            Background="#eee"
            Grid.Row="1"
            Grid.ColumnSpan="2">

            <StackPanel
                Width="80" 
                Orientation="Horizontal"
                HorizontalAlignment="Right">

                <Button 
                    Content="_OK"
                    IsDefault="True"
                    Width="70"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Margin="0,0,10,0"
                    Click="OkButton_Click"/>

                <!--<Button
                    Content="_Cancel"
                    IsCancel="True"
                    Width="70"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"/>-->
            </StackPanel>
        </Border>
    </Grid>
</Window>