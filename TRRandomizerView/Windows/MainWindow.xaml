<Window x:Class="TRRandomizerView.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cmds="clr-namespace:TRRandomizerView.Commands"
        xmlns:ctrl="clr-namespace:TRRandomizerView.Controls"
        xmlns:vm="clr-namespace:TRRandomizerView.Model"
        mc:Ignorable="d"
        Icon="..\Resources\rando.ico"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        Title="{Binding AppTitle}" Height="805" Width="1370">

    <Window.CommandBindings>
        <CommandBinding Command="cmds:WindowCommands.Open"
                        Executed="OpenCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.Randomize"
                        CanExecute="RandomizeCommandBinding_CanExecute"
                        Executed="RandomizeCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.Close"
                        CanExecute="CloseCommandBinding_CanExecute"
                        Executed="CloseCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.EmptyRecent"
                        CanExecute="EmptyRecentCommand_CanExecute"
                        Executed="EmptyRecentCommand_Executed"/>
        
        <CommandBinding Command="cmds:WindowCommands.Exit" 
                        Executed="ExitCommand_Executed" />

        <CommandBinding Command="cmds:WindowCommands.SelectAll"
                        CanExecute="SelectAllCommandBinding_CanExecute"
                        Executed="SelectAllCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.DeSelectAll"
                        CanExecute="DeSelectAllCommandBinding_CanExecute"
                        Executed="DeSelectAllCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.RandomizeSeeds"
                        CanExecute="RandomizeSeedsCommandBinding_CanExecute"
                        Executed="RandomizeSeedsCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.RandomizeOptions"
                        CanExecute="RandomizeOptionsCommandBinding_CanExecute"
                        Executed="RandomizeOptionsCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.CreateGlobalSeed"
                        CanExecute="GlobalSeedCommandBinding_CanExecute"
                        Executed="GlobalSeedCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.EditCommunitySettings"
                        CanExecute="EditCommunitySettingsCommandBinding_CanExecute"
                        Executed="EditCommunitySettingsCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.ShowBackup"
                        CanExecute="EditorActiveCommandBinding_CanExecute"
                        Executed="ShowBackupCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.ShowErrors"
                        CanExecute="ShowErrorsCommandBinding_CanExecute"
                        Executed="ShowErrorsCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.Restore"
                        CanExecute="EditorActiveCommandBinding_CanExecute"
                        Executed="RestoreCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.DeleteBackup"
                        CanExecute="EditorActiveCommandBinding_CanExecute"
                        Executed="DeleteBackupCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.ImportSettings"
                        CanExecute="EditorActiveCommandBinding_CanExecute"
                        Executed="ImportSettingsCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.ExportSettings"
                        CanExecute="ExportSettingsCommandBinding_CanExecute"
                        Executed="ExportCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.DevelopmentMode"
                        CanExecute="EditorActiveCommandBinding_CanExecute"
                        Executed="DevelopmentModeCommandBinding_Executed" />

        <CommandBinding Command="cmds:WindowCommands.GitHub"
                        Executed="GitHubCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.Discord"
                        Executed="DiscordCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.CheckForUpdate"
                        Executed="CheckForUpdateCommandBinding_Executed"/>

        <CommandBinding Command="cmds:WindowCommands.About"
                        Executed="AboutCommandBinding_Executed"/>
    </Window.CommandBindings>

    <Window.Resources>
        <DataTemplate DataType="{x:Type vm:RecentFolderList}">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding RecentFolders}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:RecentFolder}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding DisplayIndex}"
                           HorizontalAlignment="Right"
                           FontWeight="Bold"
                           Margin="0,0,5,0"/>

                <TextBlock Text="{Binding FolderPath}"
                           Grid.Column="1"/>
            </Grid>
        </DataTemplate>
    </Window.Resources>

    <DockPanel>        
        <Menu DockPanel.Dock="Top" Background="#fff">
            <MenuItem Header="_File">
                <MenuItem Header="_Open" 
                          Command="cmds:WindowCommands.Open"/>

                <MenuItem Header="Open Recent" 
                          IsEnabled="{Binding HasRecentFolders}" 
                          x:Name="_historyMenu" 
                          ItemsSource="{Binding RecentFolders}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" 
                                    Value="{Binding OpenCommandExecuted}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>

                <Separator/>

                <MenuItem Header="_Randomize"
                          Command="cmds:WindowCommands.Randomize"/>

                <MenuItem Header="_Close" 
                          Command="cmds:WindowCommands.Close"/>

                <Separator/>

                <MenuItem Header="_Empty Recent Folder List"
                          Command="cmds:WindowCommands.EmptyRecent"/>

                <Separator/>

                <MenuItem Header="E_xit"
                          Command="cmds:WindowCommands.Exit"/>
            </MenuItem>

            <MenuItem Header="_Edit" 
                      IsEnabled="{Binding IsEditorActive}">
                <MenuItem Header="Select All"
                          Command="cmds:WindowCommands.SelectAll"/>

                <MenuItem Header="Deselect All"
                          Command="cmds:WindowCommands.DeSelectAll"/>

                <Separator/>

                <MenuItem Header="Randomize All Seeds"
                          Command="cmds:WindowCommands.RandomizeSeeds"/>

                <MenuItem Header="Randomize All Options"
                          Command="cmds:WindowCommands.RandomizeOptions"/>

                <MenuItem Header="Configure Global Seed"
                          Command="cmds:WindowCommands.CreateGlobalSeed"/>
            </MenuItem>

            <MenuItem Header="_Tools"
                      IsEnabled="{Binding IsEditorActive}">
                <MenuItem Header="Show Backup Folder"
                          Command="cmds:WindowCommands.ShowBackup"/>

                <MenuItem Header="Show Error Folder"
                          Command="cmds:WindowCommands.ShowErrors"/>

                <Separator/>
                
                <MenuItem Header="Restore To Default"
                          Command="cmds:WindowCommands.Restore"/>

                <MenuItem Header="Delete Backup"
                          Command="cmds:WindowCommands.DeleteBackup"/>

                <Separator/>

                <MenuItem Header="Import Settings"
                          Command="cmds:WindowCommands.ImportSettings"/>

                <MenuItem Header="Export Settings"
                          Command="cmds:WindowCommands.ExportSettings"/>

                <Separator/>

                <MenuItem Header="Development Mode"
                          Command="cmds:WindowCommands.DevelopmentMode"
                          x:Name="_developmentModeMenuItem"
                          ToolTip="Unplayable. Displays all secret and item locations."/>
            </MenuItem>

            <MenuItem Header="_Help">
                <MenuItem Header="GitHub"
                          Command="cmds:WindowCommands.GitHub"/>

                <MenuItem Header="Discord"
                          Command="cmds:WindowCommands.Discord"/>

                <Separator/>

                <MenuItem Header="Check For Updates"
                          Command="cmds:WindowCommands.CheckForUpdate"/>
                <Separator/>

                <MenuItem Header="{Binding AboutTitle}"
                          Command="cmds:WindowCommands.About"/>
            </MenuItem>

            <MenuItem Header="_Update Available"
                      x:Name="_updateAvailableMenu"
                      FontWeight="Bold"
                      Foreground="{StaticResource ThemeColour8}"
                      Visibility="Collapsed"
                      Click="UpdateAvailableMenuItem_Click"/>
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem Visibility="{Binding EditorStatusVisibility}">
                <TextBlock x:Name="_editionStatusText" Text="{Binding Edition}" FontWeight="Bold"/>
            </StatusBarItem>

            <Separator Margin="5,0"
                       Visibility="{Binding EditorStatusVisibility}"/>

            <StatusBarItem Visibility="{Binding EditorStatusVisibility}">
                <Hyperlink x:Name="_folderStatusText" 
                           NavigateUri="{Binding DataFolder}" 
                           RequestNavigate="EditorFolder_RequestNavigate">
                    <TextBlock Text="{Binding DataFolder}"/>
                </Hyperlink>
            </StatusBarItem>

            <Separator Margin="5,0"
                       Visibility="{Binding EditorStatusVisibility}"/>

            <StatusBarItem Visibility="{Binding EditorStatusVisibility}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Saved" 
                               Visibility="{Binding EditorSavedStatusVisibility}"
                               Foreground="DarkGreen"
                               FontWeight="Bold"/>

                    <TextBlock Text="Unsaved" 
                               Visibility="{Binding EditorUnsavedStatusVisibility}"
                               Foreground="DarkRed"
                               FontWeight="Bold"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>

        <Grid x:Name="_mainGrid" Margin="5">
            <ctrl:FolderLoadControl 
                x:Name="_folderControl" 
                Visibility="{Binding FolderControlVisibility}"/>
 
            <ctrl:EditorControl 
                x:Name="_editorControl" 
                Visibility="{Binding EditorControlVisibility}"/>
        </Grid>
    </DockPanel>
</Window>