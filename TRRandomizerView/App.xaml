<Application x:Class="TRRandomizerView.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Windows\MainWindow.xaml">
    <Application.Resources>
        <Brush x:Key="ThemeColour1">#D6EAFC</Brush>
        <Brush x:Key="ThemeColour2">#1185E0</Brush>
        <Brush x:Key="ThemeColour3">#CCCCCC</Brush>
        <Brush x:Key="ThemeColour4">#FFFFFF</Brush>
        <Brush x:Key="ThemeColour5">#0E7709</Brush>
        <Brush x:Key="ThemeColour6">#14A60D</Brush>
        <Brush x:Key="ThemeColour7">#094577</Brush>
        <Brush x:Key="ThemeColour8">#0D60A6</Brush>
        
        <!-- This is targeted at elements within EditorControl -->
        <Style TargetType="Border" x:Key="RandoElementBorder">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource ThemeColour3}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ThemeColour1}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ThemeColour2}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ThemeColour3}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="False">
                    <Setter Property="Opacity" Value="0.4"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- This is targeted at big call-to-action buttons e.g. Randomize -->
        <Style TargetType="{x:Type Button}" x:Key="CallToAction">
            <Setter Property="Background" Value="{StaticResource ThemeColour5}"/>
            <Setter Property="Foreground" Value="{StaticResource ThemeColour4}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="20,5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ThemeColour6}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource ThemeColour3}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="AltCallToAction">
            <Setter Property="Background" Value="{StaticResource ThemeColour7}"/>
            <Setter Property="Foreground" Value="{StaticResource ThemeColour4}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="20,5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ThemeColour8}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource ThemeColour3}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- NumericUpDown / SeedControl buttons -->
        <Style TargetType="{x:Type Control}" x:Key="SmallControlButton">
            <Setter Property="Background" Value="{StaticResource ThemeColour7}"/>
            <Setter Property="Foreground" Value="{StaticResource ThemeColour4}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <Image 
                                Source="{Binding Content, RelativeSource={RelativeSource AncestorType=Button}}"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ThemeColour8}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource ThemeColour3}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type RepeatButton}" x:Key="FlatRepeatButton">
            <Setter Property="Background" Value="{StaticResource ThemeColour7}"/>
            <Setter Property="Foreground" Value="{StaticResource ThemeColour4}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
                            Background="{TemplateBinding Background}"
                            Padding="0,2"
                            BorderThickness="1,0,0,0"
                            BorderBrush="#666">
                            <Image 
                                Source="{Binding Content, RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                Height="6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ThemeColour8}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{StaticResource ThemeColour3}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="StatusAwareTextBlock">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>